# Generated by Django 4.2.23 on 2025-06-13 17:18

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DimBehavior',
            fields=[
                ('behaviorkey', models.AutoField(db_column='BehaviorKey', primary_key=True, serialize=False)),
                ('is_smoker', models.IntegerField(db_column='Smoker')),
                ('has_physactivity', models.IntegerField(db_column='PhysActivity')),
                ('consumes_fruits', models.IntegerField(db_column='Fruits')),
                ('consumes_veggies', models.IntegerField(db_column='Veggies')),
                ('is_hvyalcoholconsumer', models.IntegerField(db_column='HvyAlcoholConsump')),
            ],
            options={
                'db_table': 'dim_behavior',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DimDemographics',
            fields=[
                ('demographicskey', models.AutoField(db_column='DemographicsKey', primary_key=True, serialize=False)),
                ('age', models.IntegerField(db_column='Age')),
                ('education', models.IntegerField(db_column='Education')),
                ('income', models.IntegerField(db_column='Income')),
            ],
            options={
                'db_table': 'dim_demographics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DimHealthcare',
            fields=[
                ('healthcarekey', models.AutoField(db_column='HealthcareKey', primary_key=True, serialize=False)),
                ('has_cholcheck_5yrs', models.IntegerField(db_column='CholCheck')),
                ('has_anyhealthcare', models.IntegerField(db_column='AnyHealthcare')),
                ('nodocbccost', models.IntegerField(db_column='NoDocbcCost')),
                ('general_health', models.IntegerField(db_column='GenHlth')),
                ('has_diffwalk', models.IntegerField(db_column='DiffWalk')),
            ],
            options={
                'db_table': 'dim_healthcare',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DimPatient',
            fields=[
                ('patientkey', models.AutoField(db_column='PatientKey', primary_key=True, serialize=False)),
                ('sex', models.IntegerField(db_column='Sex')),
            ],
            options={
                'db_table': 'dim_patient',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FactHealthOutcome',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_diabetes', models.IntegerField(db_column='Is_Diabetes')),
                ('is_prediabetes', models.IntegerField(db_column='Is_Prediabetes')),
                ('has_highbp', models.IntegerField(db_column='Has_HighBP')),
                ('has_highchol', models.IntegerField(db_column='Has_HighChol')),
                ('has_stroke', models.IntegerField(db_column='Has_Stroke')),
                ('has_heartdisease', models.IntegerField(db_column='Has_HeartDisease')),
                ('bmi', models.IntegerField(db_column='BMI')),
                ('menthlth_days', models.IntegerField(db_column='MentHlth_Days')),
                ('physhlth_days', models.IntegerField(db_column='PhysHlth_Days')),
            ],
            options={
                'db_table': 'fact_health_outcome',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FactPatientSegment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('segmentid', models.IntegerField(db_column='SegmentID')),
            ],
            options={
                'db_table': 'fact_patient_segment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FactRiskFactors',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('has_highbp', models.IntegerField(db_column='Has_HighBP')),
                ('bmi', models.IntegerField(db_column='BMI')),
            ],
            options={
                'db_table': 'fact_risk_factors',
                'managed': False,
            },
        ),
    ]
